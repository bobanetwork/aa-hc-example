version: 2.1

orbs:
  node: circleci/node@5.2.0
  go: circleci/go@1.11.0
  python: circleci/python@2.1.1
  rust: circleci/rust@1.6.1

jobs:
  integration-tests:
    docker:
      - image: ubuntu:22.04
    executor:
      name: go/default
      tag: '1.21'
    shell: /bin/bash
    resource_class: large
    parallelism: 10
    steps:
      - checkout
      - run:
          name: Install essential tools
          command: |
            apt-get update
            apt-get install -y curl git sudo
      - go/install
      - run:
          name: Checkout submodules
          command: git submodule update --init --recursive
      - run:
          name: Diagnostic - Check directory structure
          command: |
            pwd
            ls -la
      - run:
          name: Diagnostic - Check boba directory
          command: |
            ls -la boba
            cat boba/go.mod || echo "go.mod not found in boba directory"
      #- go/load-cache
      - run:
          name: Go mod download in boba directory
          command: |
            go version && cd boba && go mod tidy -e && go mod download
      #- go/save-cache
      - node/install
      - rust/install
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install Foundry
          command: |
            curl -L https://foundry.paradigm.xyz | bash
            export PATH="$PATH:/root/.foundry/bin"
            foundryup
      - run:
          name: Install pnpm
          command: |
            corepack enable
            corepack prepare pnpm@latest-9 --activate
            pnpm config set store-dir .pnpm-store
      - save_cache:
          name: Save pnpm Package Cache
          key: pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - .pnpm-store
      - run:
          name: Install Make
          command: sudo apt-get install -y make
      - run:
          name: Install dependencies (root)
          command: pnpm install
      - run:
          name: Install dependencies (contracts)
          command: |
            cd ./contracts
            pnpm install
      - run:
          name: Start local environment
          command: |
            pnpm start:local:ci 2>&1 | tee local_env.log
          no_output_timeout: 60m
          environment:
            PRIVATE_KEY: ${PRIVATE_KEY}
            CONRANKING_API_KEY: ${CONRANKING_API_KEY}
      - run:
          name: Run Hardhat tests
          command: |
            cd ./contracts
            npx hardhat test
          environment:
            TOKEN_PRICE_CONTRACT: ${TOKEN_PRICE_CONTRACT}
            RPC_URL: ${RPC_URL}
            PRIVATE_KEY: ${PRIVATE_KEY}
      - run:
          name: Display full logs
          command: cat local_env.log
          when: always

workflows:
  version: 2
  test-workflow:
    jobs:
      - integration-tests:
          context: test-env